#!/usr/bin/env python
import nltk                                                                                        
from nltk.stem.snowball import EnglishStemmer                                                      
from nltk.stem.snowball import FrenchStemmer   
import optparse
import sys


optparser = optparse.OptionParser()
optparser.add_option("-d", "--data", dest="train", default="data/hansards", help="Data filename prefix (default=data)")
optparser.add_option("-e", "--english", dest="english", default="e", help="Suffix of English filename (default=e)")
optparser.add_option("-f", "--french", dest="french", default="f", help="Suffix of French filename (default=f)")
optparser.add_option( "--FrenchStem", dest="fStem", default='hansardsStem.f', help="Name of output file for French Stemmed Sentences")
optparser.add_option("--EnglishStem", dest="eStem", default='hansardsStem.e', help="Name of output file for English Stemmed Sentences")

(opts, _) = optparser.parse_args()
f_data = "%s.%s" % (opts.train, opts.french)
e_data = "%s.%s" % (opts.train, opts.english)

eStemmer = EnglishStemmer()                                                                             
fStemmer = FrenchStemmer() 

temp = sys.stdout
sys.stdout = file(opts.eStem, 'w')

for k, sentence in enumerate(open(e_data)):
    if k % 10000 : 
        sys.stderr.write(".")
    for word in sentence.lower().strip().split():
        stem = eStemmer.stem(word.decode('utf-8'))
        sys.stdout.write("%s " % stem.encode("latin-1"))
    sys.stdout.write("\n")
sys.stderr.write("\n")
sys.stdout.close()
sys.stdout = file(opts.fStem, 'w')

for j, sentence in enumerate(open(f_data)):
    if j % 10000 : 
        sys.stderr.write(".")
    for word in sentence.lower().strip().split():
        stem = fStemmer.stem(word.decode('utf-8'))
        sys.stdout.write("%s " % stem.encode("latin-1"))
    sys.stdout.write("\n")
sys.stderr.write("\n")
