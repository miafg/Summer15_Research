#!/usr/bin/env python
import optparse
import sys

optparser = optparse.OptionParser()
optparser.add_option("-d", "--data", dest="train", default="data/hansards", help="Data filename prefix (default=data)")
optparser.add_option("-e", "--english", dest="english", default="e", help="Suffix of English filename (default=e)")
optparser.add_option("-f", "--french", dest="french", default="f", help="Suffix of French filename (default=f)")
optparser.add_option("-n", "--num_sentences", dest="num_sents", default=sys.maxint, type="int", help="Numbe of sentences to use for training and alignment")
optparser.add_option("-x", "--alignmentsEToF", dest="aETOF", default="eToF.a", help="File name for alignments from English to French (default=eToF.a)")
optparser.add_option("-y", "--alignmentsFToE", dest="aFTOE", default="fToE.a", help="File name for alignments from French to English(default=eToF.a)")
optparser.add_option("-o", "--output", dest="out", default="output.a", help="File name for output file(default=output.a)")
(opts, args) = optparser.parse_args()
f_data = "%s.%s" % (opts.train, opts.french)
e_data = "%s.%s" % (opts.train, opts.english)

#create an array of tuples, each containing one sentence pair                                               
bitext = [[(pair[0]).lower().strip().split(), ((pair[1]).lower().strip()[:pair[1].find(" ")] +(pair[1]).lower().strip()[pair[1].find(" "):]).split()] for pair in zip(open(e_data), open(f_data))[:opts.num_sents]]
biAlign = [[[sentence.split('-') for sentence in pair.strip.split()] for pair in zip(open(opts.aETOF), open(opts.aFTOE))]

sys.stderr.write("hey")

#for e2f, f2e in biAlign: 
#    neighboring = ((-1,0),(0,-1),(1,0)(0,1),(-1,-1),(-1,1),(1,-1),(1,1))
#    alignment = set()
#    union = set()
#    for posX in e2f:
#        for posY in f2e:
#            if posX == posY:
#                alignment.add(posX)
#            union.add(posX)
#    while(1):
#        for e, f in bitext: 
#            for eWord in len(e):
#                for fWord in len(f): 
#                    if fWord+'-'+eWord in alignment:
#                        sys.stderr.write("hello\n")
